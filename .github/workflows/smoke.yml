name: Web Smoke (Playwright + Pytest)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}
  schedule:
    - cron: "0 */4 * * *"   # chạy 4 giờ/lần

concurrency:
  group: smoke
  cancel-in-progress: true

jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: pip-${{ runner.os }}-

      - name: Install deps + Playwright
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          python -m playwright install --with-deps

      - name: Write .env from secrets
        shell: bash
        run: |
          cat > .env <<'ENVV'
          BASE_URL=${{ secrets.BASE_URL }}
          LOGIN_PATH=${{ secrets.LOGIN_PATH }}
          LOGIN_EMAIL=${{ secrets.LOGIN_EMAIL }}
          LOGIN_PASSWORD=${{ secrets.LOGIN_PASSWORD }}
          ENVV

      - name: Restore auth state (optional)
        if: ${{ secrets.AUTH_STATE_B64 != '' }}
        run: |
          python - <<'PY'
          import os,base64,sys
          b64=os.environ.get('AUTH_STATE_B64','')
          if b64:
              open('auth_state.json','wb').write(base64.b64decode(b64))
          PY
        env:
          AUTH_STATE_B64: ${{ secrets.AUTH_STATE_B64 }}

      - name: Run tests
        run: pytest -q || true    # vẫn cho job đi tiếp để upload report

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-report
          path: |
            report/smoke.html
            report/login_failure.png
          if-no-files-found: warn
